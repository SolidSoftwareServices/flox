@using Ei.Rp.DomainModels.MappingValues
@using EI.RP.UiFlows.Core.Flows.Screens.Models
@using EI.RP.UiFlows.Mvc.Components.PreLoad
@using EI.RP.UiFlows.Mvc.Views
@using EI.RP.WebApp.Infrastructure.Extensions
@using EI.RP.WebApp.Flows.AppFlows
@using EI.RP.WebApp.Flows.AppFlows.Accounts.Steps

@model EI.RP.WebApp.Flows.AppFlows.Accounts.Components.AccountCard.ViewModel
@functions{

	enum PageComponent
	{
		BillingDetails = 1,

	}
}
@{
	var componentPreLoader = new ComponentPreLoader<PageComponent>(Component, Model.ScreenModel);
	if (Model.ShowBillingDetails)
	{
		componentPreLoader.StartLoading<EI.RP.WebApp.Flows.AppFlows.Accounts.Components.AccountCardBillingDetails.Component>(PageComponent.BillingDetails,
			new EI.RP.WebApp.Flows.AppFlows.Accounts.Components.AccountCardBillingDetails.InputModel
		{
			AccountNumber = Model.AccountNumber,
			AccountType = Model.AccountType
		});
	}
}
<div class="my-accounts__item @(Model.ShowBillingDetails ? string.Empty : "closed")" data-testid="account-card">
	<div class="my-accounts__item__head">
		<div class="row mb-4">
			<div class="col-6">
				<h2>@(Model.AccountType == ClientAccountType.EnergyService ? "Energy Services" : Model.AccountType)</h2>
			</div>
			<div class="col-6"></div>
		</div>
		<div class="row">
			<div class="col-3"><p class="account-number" data-testid="account-card-account-number">@Model.AccountNumber</p></div>
			<div class="col-5"><p class="location" data-testid="account-card-location">@Model.AccountLocation</p></div>
			<div class="col-4">
				@using (await Html.BeginUiFlowFormAsync(Model.ScreenModel))
				{
					@(await Html.GetHiddenFlowStepMemberAsync<AccountSelection.ScreenModel>(x =>
												x.SelectedAccount.AccountNumber,
												Model.AccountNumber,
												false))
					@if (Model.CanSubmitMeterReading
					  && Model.AccountIsOpen
					  && Model.AccountType!= ClientAccountType.EnergyService)
					{
						<flow-action class="btn btn-xs"
									 data-testid="account-card-submit-meter-reading-@Model.AccountNumber"
									 trigger-event="@AccountSelection.StepEvent.SubmitMeterReading">Submit Meter Reading</flow-action>
					}
					else
					{
						<flow-action class="btn btn-xs"
									 data-testid="account-card-view-this-account-@Model.AccountNumber"
									 trigger-event="@AccountSelection.StepEvent.ViewFullAccountDetails">View this Account</flow-action>
					}
				}
			</div>
		</div>
	</div>
	@if (Model.ShowBillingDetails)
	{
		@await componentPreLoader.Render(PageComponent.BillingDetails)
	}
</div>
