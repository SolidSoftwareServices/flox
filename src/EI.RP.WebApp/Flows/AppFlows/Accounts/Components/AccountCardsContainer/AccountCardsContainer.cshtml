@using EI.RP.WebApp.Infrastructure.Extensions
@using EI.RP.UiFlows.Mvc.Components.PreLoad

@model EI.RP.WebApp.Flows.AppFlows.Accounts.Components.AccountCardsContainer.ViewModel
@{

	var componentPreLoader = new ComponentPreLoader<string>(Component, Model.ScreenModel);
	//preload components
	foreach (var account in Model.Paging.CurrentPageItems)
	{
		componentPreLoader.StartLoading<EI.RP.WebApp.Flows.AppFlows.Accounts.Components.AccountCard.Component>(account.AccountNumber, new EI.RP.WebApp.Flows.AppFlows.Accounts.Components.AccountCard.InputModel

		{
			AccountNumber = account.AccountNumber,
			ShowBillingDetails = account.IsOpen,
			CanSubmitMeterReading = Model.CanSubmitMeterReading

		});
	}

}
@foreach (var account in Model.Paging.CurrentPageItems)
{
	@await componentPreLoader.Render(account.AccountNumber)
}

@if (Model.IsPagingEnabled && Model.Paging.TotalPages > 1)
{
	<div class="pagination pagination_right">
		@await Html.DisplaySmartContainerFlowLinkPaging(
			Model.ScreenModel,
			Model.Paging.PageIndex,
			Model.Paging.TotalPages,
			Model.NumberOfPageLinks,
			Model.RouteValues,
			Model.PaginationId,
			Model.WhenChangingPageFocusOn ?? Model.ContainerId)
	</div>
}