@using Ei.Rp.DomainModels.MappingValues
@using Ei.Rp.Mvc.Core.Cryptography.AntiTampering
@using EI.RP.WebApp.Infrastructure.Extensions
@using EI.RP.WebApp.Flows.AppFlows.AccountsPaymentConfiguration.FlowDefinitions
@using EI.RP.WebApp.Flows.AppFlows.AccountsPaymentConfiguration.Steps

@model EI.RP.WebApp.Flows.AppFlows.AccountsPaymentConfiguration.Steps.ChoosePaymentOption.ScreenModel

@{
    if (!new[]
    {
        AccountsPaymentConfigurationFlowStartType.SmartActivation,
    }.Contains(Model.StartType))
    {
        throw new ArgumentOutOfRangeException();
    }
}

@if (Model.ExistingPaymentMethod == PaymentMethodType.DirectDebit)
{
    <div class="col-md-6 d-flex" data-testid="setup-new-direct-debit-option">
        <div class="plan-card p-5 w-100">
            <div class="top">
                <h2>Set Up New Direct Debit</h2>
                <p class="regular">Set up new Direct Debit for your bill payments. You will need your IBAN and the name on your bank account.</p>
            </div>
            <div class="bottom">
                <div class="bottom-cta">
                    <div class="pt-4 pb-1 mt-3">
                        <a href="#" class="btn btn-primary col-md-10 centre offset-md-1" type="button" data-toggle="modal" data-target="#modal-setup-new" data-testid="setup-new-direct-debit">Set up New Direct Debit</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="offset-md-1 col-md-10" data-testid="setup-new-direct-debit-option">
        <p class="mb-5">Setting up a direct debit doesn't just make paying your bill easier, you can enjoy cheaper electricity @(Model.IsDualFuelAccount ? "and gas " : "")prices too.</p>
        @using (await Html.BeginUiFlowFormAsync(Model, className: "direct-debit"))
        {
            @await Html.SecureHiddenForAsync(m=>m.StartType,false)
            @await Html.SecureHiddenForAsync(m=>m.IsDualFuelAccount,false)

            <div class="form-group w-100 mb-5">
                <label for="customer-name">Full name of account holder *</label>
                @Html.TextBoxFor(model => model.NameOnBankAccount, new
           {
               id = "customer-name",
               @class = "form-control w-100",
               maxlength = "40",
               type = "text",
               placeholder = "Enter full name of account holder here",
               aria_label = "Full name of account holder"
           })
                @Html.ValidationMessageFor(model => model.NameOnBankAccount, "", new
                {
                    id = "customer-name-error",
                    @class = "alert alert-form alert-danger"
                })
                @if (Model.IsNameOnBankAccountInvalid)
                {
                    <div id="customer-name-error" class="alert alert-form alert-danger" role="alert">Please enter a Bank Account name</div>
                }
            </div>
            <div class="form-group w-100 mb-5">
                <label class="mb-0" for="iban">IBAN *</label>
                <small class="form-text text-muted">Up to 24 digits containing numbers and letters</small>
                @Html.TextBoxFor(model => model.UserInputIBAN, new
           {
               id = "iban",
               @class = "form-control w-100",
               maxlength = "40",
               placeholder = "Enter IBAN here",
               aria_label= "IBAN"
           })
                @Html.ValidationMessageFor(model => model.UserInputIBAN, "", new
                {
                    id = "iban-error",
                    @class = "alert alert-form alert-danger"
                })
                @if (Model.IsIbanInvalid)
                {
                    <div id="iban-error" class="alert alert-form alert-danger" role="alert">Please enter a valid IBAN</div>
                }
            </div>
            <div class="btn-container text-center text-sm-left">
                <flow-action id="addDebitCard" class="btn btn-primary line-height-for-btns mr-sm-5 mb-5"
                             trigger-event="@ChoosePaymentOption.StepEvent.SetUpNewDirectDebit">Add direct debit</flow-action>
                <flow-action id="skipDirectDebit" class="btn btn-xs btn--no-before btn--no-after btn--no-padding mx-auto mx-sm-0 mb-5"
                             trigger-event="@ChoosePaymentOption.StepEvent.ManualPaymentSelected">Skip this step</flow-action>
            </div>
        }
    </div>
}
