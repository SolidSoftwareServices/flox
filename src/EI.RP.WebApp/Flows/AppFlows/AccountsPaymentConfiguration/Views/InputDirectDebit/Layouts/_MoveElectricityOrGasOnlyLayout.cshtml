@using EI.RP.WebApp.Infrastructure.Extensions
@using EI.RP.WebApp.Flows.AppFlows
@using EI.RP.WebApp.Flows.AppFlows.AccountsPaymentConfiguration.Steps

@model EI.RP.WebApp.Flows.AppFlows.AccountsPaymentConfiguration.Steps.InputDirectDebitDetails.ScreenModel

@{
    ViewBag.Title = "Set up Direct Debit - My Account - Electric Ireland";
    const string popupViewsLocationPrefix = "./../Popups/";
    const string partViewsLocationPrefix = "./../Parts/";
    if (!new[] { InputDirectDebitDetails.ScreenModel.StepMode.MoveElectricity, InputDirectDebitDetails.ScreenModel.StepMode.MoveGas, InputDirectDebitDetails.ScreenModel.StepMode.MultipleAccountsSetUp }.Contains(Model.ViewMode))
    {
        throw new ArgumentOutOfRangeException();
    }
}

<h2 id="inputDirectDebitHeader" class="landing-head">@Model.AccountHeaderText</h2>
<p id="directDebitContent">You never have to worry about paying your bill on time. It will be automatically paid from your bank account when your bill issues every two months.</p>

<div class="portal-details__form">
    @using (await Html.BeginUiFlowFormAsync(Model))
    {
        @await Html.PartialAsync($"{partViewsLocationPrefix}_InputFields.cshtml", Model)

        @await Html.PartialAsync($"{partViewsLocationPrefix}_TermsAndConditionsInput.cshtml", Model)

        @Html.ValidationSummary(true, "", new
        {
            @class = "alert alert-form alert-danger mb-5",
            role = "alert"
        })

        <div class="portal-details__form__buttons" id="directdebit">
            <flow-action class="btn btn-primary"
                         trigger-event="@InputDirectDebitDetails.StepEvent.DirectDebitSetupCompleted">@Model.SubmitButtonText</flow-action>
                        @if (Model.ShowCancelDirectDebitSetup)
                        {
                            <a id="btnCancelDirectDebit" href="#" data-toggle="modal" data-target="#modal-cancel-dd-setup" class="btn btn-xs btn--no-after btn--no-before green">Cancel direct debit setup</a>
                        }
                        else if (Model.ShowSkipDirectDebitSetup)
                        {
                            <a id="skip_dd_btn" href="#" data-toggle="modal" data-target="#modal-skip-dd-setup" class="btn btn-xs btn--no-after btn--no-before green">Skip Direct Debit set up</a>
                        }
                    </div>
                }
</div>

@await Html.PartialAsync($"{partViewsLocationPrefix}_Mandate.cshtml", Model)

@if (Model.ShowCancelDirectDebitSetup)
{
    @await Html.PartialAsync($"{popupViewsLocationPrefix}_CancelDirectDebitSetupPopup.cshtml", Model)
}
else if (Model.ShowSkipDirectDebitSetup)
{
    @await Html.PartialAsync($"{popupViewsLocationPrefix}_CancelPopup.cshtml", Model)
}

@await Html.PartialAsync($"{popupViewsLocationPrefix}_SkipPopup.cshtml", Model)
