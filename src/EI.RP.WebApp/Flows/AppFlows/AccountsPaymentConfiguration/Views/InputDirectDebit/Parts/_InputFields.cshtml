@using Ei.Rp.Mvc.Core.Cryptography.AntiTampering

@model EI.RP.WebApp.Flows.AppFlows.AccountsPaymentConfiguration.Steps.InputDirectDebitDetails.ScreenModel

@await Html.SecureHiddenForAsync(model => model.ViewMode, false)

<div class="form-group w-100">
    <label for="iban">IBAN</label>
    @Html.TextBoxFor(model => model.UserInputIBAN, new
        {
            id = "iban",
            @class = "form-control w-100",
            maxlength = "40",
            placeholder = "e.g. IE99AIBK90000012345678",
            aria_label="IBAN"
        })
    @await Html.SecureHiddenForAsync(model => model.IBAN, new
        {
            id = "IBANShort"
        }, false)
    @Html.ValidationMessageFor(model => model.UserInputIBAN, "", new
        {
            id = "iban-error",
            @class = "alert alert-form alert-danger"
        })
    <span class="portal-details__form__info">
        What is my IBAN? <button type="button" class="portal-details__form__info__icon border-0" aria-label="What is my IBAN?" data-toggle="tooltip" data-placement="right" title="" data-original-title="IBAN stands for International Bank Account Number. It contains your Bank Account Number and is available from your bank or can be found on your bank account statement."></button>
    </span>
</div>

<div class="form-group w-100">
    <label for="name">Name on bank account</label>
    @Html.TextBoxFor(model => model.NameOnBankAccount, new
        {
            id = "customer-name",
            @class = "form-control w-100",
            maxlength = "40",
            type = "text",
            placeholder = "Enter here the name on bank account",
            aria_label = "Name on Bank Account"
        })
    @Html.ValidationMessageFor(model => model.NameOnBankAccount, "", new
        {
            id = "customer-name-error",
            @class = "alert alert-form alert-danger"
        })
</div>