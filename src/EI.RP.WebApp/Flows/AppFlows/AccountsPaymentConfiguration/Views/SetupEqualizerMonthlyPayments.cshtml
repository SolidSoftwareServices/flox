@using Ei.Rp.Mvc.Core.Cryptography.AntiTampering
@using EI.RP.WebApp.Infrastructure.Extensions
@using EI.RP.WebApp.Flows.AppFlows.AccountsPaymentConfiguration.Steps

@model EI.RP.WebApp.Flows.AppFlows.AccountsPaymentConfiguration.Steps.SetupEqualizerMonthlyPayments.ScreenModel

<main class="plan" data-page="equalizer-setup">
    <div class="container">
        <div class="portal-details equaliser equaliser-info">
            <h2>Equal Monthly Payments</h2>
            <div class="equaliser-monthly-payment">
                <h2>Your Equal Monthly Payment: <span data-testid="equalizer-setup-monthly-payment-amount">@Model.EqualizerMonthlyPaymentAmount</span></h2>
                <div class="date-form">
                    <div class="form-group">
                        <label for="@Html.IdFor(m => m.FirstPaymentDate)">Preferred payment date</label>
                        <p class="smaller mt-0 mb-4">This will be the date of each of your monthly payments. Your first payment must be 10 days from today and no more than 40 days in the future.</p>
                        <div class="moving-form date-field">
                            @using (await Html.BeginUiFlowFormAsync(Model,
                               htmlId: SetupEqualizerMonthlyPayments.StepEvent.NewPaymentDateSelected,
                               defaultEvent: SetupEqualizerMonthlyPayments.StepEvent.NewPaymentDateSelected))
                            {

                                @Html.TextBoxFor(m => m.FirstPaymentDate, "{0:dd/MM/yyyy}", new
                                {
                                    type = "text",
                                    @class = "form-control w-100 date datetimepicker-input",
                                    data_id = "first-payment-date",
                                    data_testid = "equalizer-setup-first-payment-date",
                                    data_toggle = "datetimepicker",
                                    data_target = $"#{Html.IdFor(m => m.FirstPaymentDate)}",
                                    data_date_use_current = "false",
                                    data_date_format = "DD/MM/YYYY",
                                    data_date_min_date = DateTime.Now.AddDays(10).ToString("yyyy-MM-dd"),
                                    data_date_max_date = DateTime.Now.AddDays(40).ToString("yyyy-MM-dd"),
                                    placeholder = "DD/MM/YYYY",
                                    aria_label = "Preferred payment date"
                                })
                                <input type="submit" class="d-none" value="Update date" />
                            
                            }
                        </div>
                    </div>
                    <div class="moving-form">
                        @using (await Html.BeginUiFlowFormAsync(Model,
                          htmlId: SetupEqualizerMonthlyPayments.StepEvent.SetupDirectDebit))
                        {
                            @await Html.SecureHiddenForAsync(m => m.FirstPaymentDate, false)
                            @await Html.SecureHiddenForAsync(m => m.EqualizerMonthlyPaymentAmount, false)
                            <flow-action class="btn btn-primary text-center w-100"
                                         data-testid="equalizer-setup-set-up-direct-debit"
                                         trigger-event=@SetupEqualizerMonthlyPayments.StepEvent.SetupDirectDebit>Set Up Direct Debit</flow-action>
                            <a href="#" class="btn btn-xs green" data-toggle="modal" data-target="#modal-cancel">Cancel</a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</main>

<div class="modal modal-lg fade" id="modal-cancel" tabindex="-1" role="dialog" aria-labelledby="modal-cancel-label" aria-hidden="true" data-trap-focus>
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h1 class="modal-title modal-title-wider" id="modal-cancel-label">Are you sure?</h1>
            </div>
            <div class="modal-body modal-body--text">
                <p>The details provided will be deleted and your Equal Monthly Payments will not be set up.</p>
            </div>
            <div class="modal-footer no-flex">
                @using (await Html.BeginUiFlowFormAsync(Model,
                   htmlId: "cancelPopup"))
                {
                    <flow-action class="btn btn-primary"
                                 trigger-event=@SetupEqualizerMonthlyPayments.StepEvent.EqualizerMonthlyPaymentStep>Yes, I'm sure</flow-action>
                }
                <button type="button" class="btn btn-xs btn-xs--no-icon text-uppercase mt-5" data-dismiss="modal">Go Back</button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    $(function() {
        var ignoreSubmit = false;
        $('[data-id="first-payment-date"]').on('change.datetimepicker', function(e) {
            if (ignoreSubmit) {
                ignoreSubmit = false;
            }
            else if (e.date && e.date.isValid() && e.date.date() > 28) {
                ignoreSubmit = true;
                $(this).datetimepicker('date', e.oldDate);
            }
            else if (e.oldDate && e.date !== e.oldDate) {
                $(e.target).siblings('input[type="submit"]').first().click();
            }
        });
    });
</script>
