@using Ei.Rp.DomainModels.MappingValues
@using EI.RP.UiFlows.Mvc.Components.PreLoad
@using EI.RP.WebApp.Infrastructure.Extensions
@using EI.RP.WebApp.Flows.AppFlows
@using EI.RP.WebApp.Flows.AppFlows.Plan.FlowDefinitions
@using EI.RP.WebApp.Infrastructure.Extensions

@model EI.RP.WebApp.Flows.AppFlows.AccountsPaymentConfiguration.Steps.ShowPaymentsHistory.ScreenModel

@functions
{
    enum PageComponent
    {
        BillsAndPaymentsTable = 1
    }
}

@{
    var componentPreLoader = new ComponentPreLoader<PageComponent>(Component, Model);

    componentPreLoader.StartLoading<EI.RP.WebApp.Flows.SharedFlowComponents.Main.BillsAndPaymentsTable.Component>(PageComponent.BillsAndPaymentsTable, 
        new EI.RP.WebApp.Flows.SharedFlowComponents.Main.BillsAndPaymentsTable.InputModel
        {
            NumberPagingLinks = 4,
            AccountNumber = Model.AccountNumber,
            ContainedInFlowType = ResidentialPortalFlowType.AccountsPaymentConfiguration,
            IsPagingEnabled = true,
            PageIndex = Model.PageIndex,
            PageSize = 6
        });
}

<main class="payment" data-page="payments-history">
    <div class="container">
        <div class="portal-details text-center @(Model.OverduePayments.Any() ? "overdue" : string.Empty)">

            @if (!Model.AccountClosed)
            {
                @using (await Html.BeginUiFlowFormAsync(Model))
                {
                    <span class="text-uppercase payment__caption">Amount due</span>
                    <p class="payment__price">@(Model.AmountDue != null ? Model.AmountDue.ToString() : "€0.00")</p>

                    @if (Model.IsDue)
                    {
                        <p class="due-date">
                            Due date:
                            <span>@(Model.PaymentMethod == PaymentMethodType.DirectDebit ? "Direct Debit set for" : string.Empty) @Model.DueDate?.ToString("dnn MMMM yyyy", true)</span>
                        </p>

                        if (Model.PaymentMethod == PaymentMethodType.DirectDebit)
                        {
                            <p>You don't need to do anything. We'll take your <br /> payment automatically on the date above.</p>
                        }
                    }

                    foreach (var overduePayment in Model.OverduePayments)
                    {
                        <p class="payment-overdue" data-testid="payment-overdue">
                            <span>PAYMENT OVERDUE:</span> @overduePayment.Amount.ToString() <span>Due:</span> @overduePayment.DueDate.ToString("dnn MMMM yyyy", true)
                        </p>
                    }

                    <div class="text-center mb-5">
                        <a href="https://www.electricireland.ie/residential/help/billing"
                           target="_blank"
                           data-testid="how-to-read-bill-link"
                           class="btn btn-xs btn--no-before btn--no-after btn--no-padding btn--font-smaller ml-4 green">
                            How to read your bill <span class="portal-details__form__info__icon"></span>
                        </a>
                    </div>

                    <flow-action data-testid="payments-history-pay-now-button"
                                 class="btn btn-primary w-50 text-center"
                                 action-type="StartFlow"
                                 flow-location="SameContainerAsMe"
                                 flow-name=@ResidentialPortalFlowType.MakeAPayment>
                        Pay Now
                    </flow-action>
                    <p>
                        <flow-action data-testid="payments-history-change-billing-preferences-link"
                                     class="btn btn-xs green mt-0"
                                     action-type="StartFlow"
                                     flow-location="SameContainerAsMe"
                                     flow-name="@ResidentialPortalFlowType.Plan"
                                     flow-parameters="@(new PlanInput { AccountNumber = Model.AccountNumber })">Change billing preferences</flow-action>
                    </p>
                }
            }

            @await componentPreLoader.Render(PageComponent.BillsAndPaymentsTable)

        </div>
    </div>
</main>