@using EI.RP.WebApp.Infrastructure.Extensions
@using EI.RP.WebApp.Flows.AppFlows
@using EI.RP.WebApp.Flows.AppFlows.ChangePassword.Steps
@using EI.RP.UiFlows.Mvc.Components.PreLoad

@model EI.RP.WebApp.Flows.AppFlows.ChangePassword.Steps.ChangePassword.RequestNewPasswordScreenModel

@functions
{
    enum PageComponent
    {
        Header = 1,
        SettingsSubNavigation
    }
}

@{
    var componentPreLoader = new ComponentPreLoader<PageComponent>(Component, Model);
    componentPreLoader.StartLoading<EI.RP.WebApp.Flows.SharedFlowComponents.Main.Header.Component>(PageComponent.Header,
        new EI.RP.WebApp.Flows.SharedFlowComponents.Main.Header.InputModel
        {
            Title = "My Profile"
        });
    componentPreLoader.StartLoading<EI.RP.WebApp.Flows.SharedFlowComponents.Main.SettingsSubNavigation.Component>(PageComponent.SettingsSubNavigation,
        new EI.RP.WebApp.Flows.SharedFlowComponents.Main.SettingsSubNavigation.InputModel
        {
            IsChangePassword = true
        });
}

<div class="portal-header">
    @await componentPreLoader.Render(PageComponent.Header)
    @await componentPreLoader.Render(PageComponent.SettingsSubNavigation)
</div>

<div class="position-relative">
    <div class="sub-navigation-overlay"></div>
    <main class="help" data-page="change-password">
        <div class="container">
            <div class="portal-details password">
                <h2>Change Password</h2>
                <hr aria-hidden="true" />
                @if (Model.IsPasswordChangedSuccess)
                {
                    <div class="mt-5 mb-5">
                        <p>Your Password has been successfully changed.</p>
                    </div>
                    <flow-action data-testid="meter-reading-back"
                                 action-type="StartFlow"
                                 flow-name="@ResidentialPortalFlowType.Accounts"
                                 flow-location="NotContained"
                                 class="btn btn-xs btn-xs-back green">Back to My Accounts</flow-action>
                }
                else
                {
                    <div class="portal-details__form no-border">
                        @using (await Html.BeginUiFlowFormAsync(Model))
                        {
                            @Html.AntiForgeryToken()
                            if (Model.WasPasswordTriedToChange && Model.ErrorMessage != string.Empty)
                            {
                                <div data-testid="change-password-error"
                                     class="alert alert-form alert-danger mb-5">
                                    @Model.ErrorMessage
                                </div>
                            }
                            <div class="form-group w-100">
                                <label for="currentPassword">Current Password</label>
                                <div class="form-password">
                                    @Html.PasswordFor(model => model.CurrentPassword, new
                                    {
                                        id = "currentPassword",
                                        @class = "form-control w-100",
                                        placeholder = "******",
                                        aria_label = "Current Password",
                                        maxlength = "40",
                                        autocomplete = "current-password"
                                    })
                                    <button type="button" class="toggle-password-visibility" aria-label="Show Password">show</button>
                                    @Html.ValidationMessageFor(model => model.CurrentPassword, null, new
                                    {
                                        @class = "alert alert-form alert-danger"
                                    })
                                </div>
                            </div>
                            <div class="form-group w-100">
                                <label for="newPassword">New Password</label>
                                <p class="smaller">Must contain at least 8 characters</p>
                                <div class="form-password">
                                    @Html.PasswordFor(model => model.NewPassword, new
                                    {
                                        id = "newPassword",
                                        @class = "form-control w-100",
                                        placeholder = "******",
                                        aria_label = "New Password",
                                        maxlength = "40",
                                        autocomplete = "new-password"
                                    })
                                    <button type="button" class="toggle-password-visibility" aria-label="Show Password">show</button>
                                    @Html.ValidationMessageFor(model => model.NewPassword, null, new
                                    {
                                        @class = "alert alert-form alert-danger"
                                    })
                                </div>
                            </div>
                            <p>
                                <flow-action id="dds_update_details_btn"
                                             class="btn btn-primary w-100 text-center"
                                             trigger-event=@ChangePassword.StepEvent.SaveNewPassword>Save New Password</flow-action>
                            </p>
                        }
                    </div>
                }
            </div>
        </div>
    </main>
</div>