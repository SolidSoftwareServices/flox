@using Ei.Rp.Mvc.Core.Cryptography.AntiTampering
@using EI.RP.WebApp.Infrastructure.Extensions
@using EI.RP.WebApp.Flows.AppFlows
@using EI.RP.WebApp.Flows.AppFlows.CompetitionEntry.Steps
@using EI.RP.UiFlows.Mvc.Components.PreLoad

@model EI.RP.WebApp.Flows.AppFlows.CompetitionEntry.Steps.CompetitionEntry.ScreenModel

@functions
{
enum PageComponent
{
    Header = 1,
    ProductAndServicesSubNavigation
}
}

@{
    ViewBag.Title = "Competition Entry - My Accounts - Electric Ireland";
    const string sharedPartialViewsLocationPrefix = "./SharedPartialViews/";

    var componentPreLoader = new ComponentPreLoader<PageComponent>(Component, Model);

    componentPreLoader.StartLoading<EI.RP.WebApp.Flows.SharedFlowComponents.Main.Header.Component>(PageComponent.Header,
        new EI.RP.WebApp.Flows.SharedFlowComponents.Main.Header.InputModel
        {
            Title = "Products & Services"
        });
    componentPreLoader.StartLoading<EI.RP.WebApp.Flows.SharedFlowComponents.Main.ProductAndServicesSubNavigation.Component>(PageComponent.ProductAndServicesSubNavigation,
        new EI.RP.WebApp.Flows.SharedFlowComponents.Main.ProductAndServicesSubNavigation.InputModel
        {
            IsCompetitions = true
        });
}

<div class="portal-header">
    @await componentPreLoader.Render(PageComponent.Header)
    @await componentPreLoader.Render(PageComponent.ProductAndServicesSubNavigation)
</div>

<div class="position-relative">
    <div class="sub-navigation-overlay"></div>
    <main class="help" data-page="competition-entry">
        <div class="container">
            <div class="products-container portal-details">
                @Html.HiddenFor(m => m.Name, new { data_testid = "competition-entry-name" })
                <div class="mb-5">
                    <picture data-testid="competition-entry-image">
                        <source media="(min-width:981px)" srcset="~/img/competitions/@Model.ImageDesktop" alt="@Model.ImageAltText">
                        <img src="~/img/competitions/@Model.ImageMobile" alt="@Model.ImageAltText" />
                    </picture>
                </div>
                <div class="competition-wrap">
                    @await Html.PartialAsync($"{sharedPartialViewsLocationPrefix}_CompetitionDescription.cshtml", Model)
                    @if (Model.HasExistingEntry == true)
                    {
                        @await Html.PartialAsync($"{sharedPartialViewsLocationPrefix}_AlreadyEntered.cshtml")
                    }
                    else
                    {
                        @using (await Html.BeginUiFlowFormAsync(Model))
                        {
                            <p class="font-weight-bold mb-2" data-testid="competition-question">
                                @Model.QuestionPart1@if(!string.IsNullOrWhiteSpace(Model.QuestionPart2)){ <u>@Model.QuestionPart2</u> }@Model.QuestionPart3
                            </p>
                            <div class="form-group form-check mt-2 mb-5">
                                <div class="custom-control custom-radio my-4">
                                    @Html.RadioButtonFor(m => m.Answer, Model.AnswerA,
                                        new
                                        {
                                            @class = "custom-control-input",
                                            id = "Answer1",
                                            Name = "Answer",
                                            data_testid = "Answer1-CheckBox"
                                        })
                                    <label for="Answer1" class="custom-control-label text-dark" data-testid="competition-Answer1">@Model.AnswerA</label>
                                </div>
                                <div class="custom-control custom-radio my-4">
                                    @Html.RadioButtonFor(m => m.Answer, Model.AnswerB,
                                        new
                                        {
                                            @class = "custom-control-input",
                                            id = "Answer2",
                                            Name = "Answer",
                                            data_testid = "Answer2-CheckBox"
                                        })
                                    <label for="Answer2" class="custom-control-label text-dark" data-testid="competition-Answer2">@Model.AnswerB</label>
                                </div>
                                <div class="custom-control custom-radio my-4">
                                    @Html.RadioButtonFor(m => m.Answer, Model.AnswerC,
                                        new
                                        {
                                            @class = "custom-control-input",
                                            id = "Answer3",
                                            Name = "Answer",
                                            data_testid = "Answer3-CheckBox"
                                        })
                                    <label for="Answer3" class="custom-control-label text-dark" data-testid="competition-Answer3">@Model.AnswerC</label>
                                </div>
                                @Html.ValidationMessageFor(model => model.Answer, null, new { @class = "alert alert-form alert-danger w-100" })
                            </div>
                            <p class="font-light mb-5">* Denotes mandatory fields</p>
                            <hr aria-hidden="true" class="my-5" />
                            <div class="form-group form-check my-5">
                                <div class="custom-control custom-checkbox" id="consent">
                                    @Html.CheckBoxFor(model => model.Consent,
                                        new
                                        {
                                            @class = "custom-control-input",
                                            id = "occupier",
                                            data_testid = "competition-contact-consent-checkbox"
                                        })
                                    <label for="occupier" class="custom-control-label font-light small-txt pr-0" data-testid="competition-contact-consent">Yes, I would like to opt-in to email marketing communications to enter the Electric Ireland customer draw *</label>
                                    @Html.ValidationMessageFor(model => model.Consent, null,
                                        new
                                        {
                                            @class = "alert alert-form alert-danger w-100"
                                        })
                                </div>
                            </div>
                            @Html.ValidationSummary(true, "", new
                            {
                                @class = "alert alert-form alert-danger w-100",
                                role = "alert"
                            })
                            <div class="my-5">
                                <flow-action class="btn btn-primary btn-submit-form submit"
                                             data-testid="submit-competition-entry-button"
                                             trigger-event="@CompetitionEntry.StepEvent.SubmitCompetitionEntry">Enter</flow-action>
                            </div>
                            <div class="my-5">
                                By submitting your entry into the customer draw, you agree to our <a role="link" href="@Model.TermAndConditionsUrl" target="_blank">Customer Draw Terms & Conditions</a>.
                            </div>

                        }
                    }
                </div>
            </div>
        </div>
    </main>
</div>
