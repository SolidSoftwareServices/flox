@using System.Diagnostics
@using EI.RP.CoreServices.System

@inject IUrlHelper UrlHelper

@model EI.RP.WebApp.Flows.AppFlows.MakeAPayment.Components.PaymentGateway.ViewModel

@if (Model.IsLowBalance)
{
    <div class="portal-details__form">
        <p>Amount due is too low to make a payment. Please change amount.</p>
    </div>
}
else 
{
    <div class="portal-details__form">

        <div class="elavon-container" style="width: 100%;">
            <iframe title="Payment" id="paymentFrame" name="paymentFrame" style="min-width: 100%;" frameborder="0" seamless="seamless" scrolling="no"></iframe>
        </div>

        <form id="paymentForm" method="POST" action=@Model.RequestUrl target="paymentFrame">
            <input type="hidden" name="MERCHANT_ID" value=@Model.MerchantId>
            <input type="hidden" name="ORDER_ID" value=@Model.OrderId>
            <input type="hidden" name="ACCOUNT" value=@Model.Account>
            <input type="hidden" name="CURRENCY" value=@Model.Currency>
            <input type="hidden" name="AMOUNT" value=@Model.Amount>
            <input type="hidden" name="TIMESTAMP" value=@Model.TimeStamp>
            <input type="hidden" name="SHA1HASH" value=@Model.SHA1HashValue>
            <input type="hidden" name="MERCHANT_RESPONSE_URL" value=@Model.ResponseUrl>
            <input type="hidden" name="AUTO_SETTLE_FLAG" value=@Model.AutoSettle.ToIntString()>
            <input type="hidden" name="PROD_ID" value=@Model.ProductId>
            <input type="hidden" name="ACCOUNT_NUMBER" value=@Model.ContractAccountNumber>
            <input type="hidden" name="PARTNER" value=@Model.BusinessPartner>
            <input type="hidden" name="USER_NAME" value=@Model.UserName>
            <input type="hidden" name="HASH_VALUE" value=@Model.CookieJson>
            <input type="hidden" name="CSRF" value=@Model.CSRF>
            <input type="hidden" name="HPP_VERSION" value="2">
            <!-- iFrame Optimization Fields -->
            <input type="hidden" name="HPP_POST_DIMENSIONS" value="@Model.ResponseDomain">
            <!-- End iFrame Optimization Fields -->
            <input type="hidden" name="OFFER_SAVE_CARD" value="1">
            <input type="hidden" name="PAYER_EXIST" value=@Model.PayerExists.ToIntString()>
            @if (Model.PayerExists)
            {
                <input type="hidden" name="HPP_SELECT_STORED_CARD" value=@Model.PayerRef>
            }
            else
            {
                <input type="hidden" name="CARD_STORAGE_ENABLE" value="1">
            }

        </form>
    </div>

    @if (Debugger.IsAttached)
    {
    <div class="portal-details__form">
        <h3>Only visible on environments without gateway integration:</h3>
        <p>Test Successful</p>
        <div id="paymentGatewaySuccessfulTestFrame" style="width: 100%;"></div>
        
        <p>Test Error</p>
        <div id="paymentGatewayErrorTestFrame" style="width: 100%;"></div>

        <script type="text/javascript">
                document.addEventListener("DOMContentLoaded",
                    function (event) {
                        var data = {
                            "TIMESTAMP": "@Model.TimeStamp",
                            "RESULT": "00",
                            "ORDER_ID": "@Model.OrderId",
                            "MESSAGE": "A Message",
                            "AUTHOCODE": "An Auth Code",
                            "PASRED": "a pas ref",
                            "SHA1HASH": "@Model.SHA1HashValue",
                            "PARTNER": "@Model.BusinessPartner",
                            "AMOUNT": "@Model.Amount",
                            "HASH_VALUE": "@Model.CookieJson",
                            "CSRF": "@Model.CSRF",
                            "SAVED_PAYER_REF": "@Model.PayerRef",
                            "USER_NAME": "@Model.UserName",
                            "ACCOUNT_NUMBER":"@Model.ContractAccountNumber"
                        };

                        postPaymentCallback(data, '#paymentGatewaySuccessfulTestFrame');
                        data.RESULT = "999";
                        postPaymentCallback(data, '#paymentGatewayErrorTestFrame');

                        function postPaymentCallback(data, cssSelectorOfElementToUpdateWithPostResponse) {
                            $.ajax({
                                url: "@Model.ResponseUrl",
                                data: data,
                                type: "post",
                                success: function (result) {
                                    $(cssSelectorOfElementToUpdateWithPostResponse).html(result);
                            }
                            });
                        }
                    });
        </script>
    </div>
    }

    <script src="~/js/components/payment-gateway.js"></script>
}