@using EI.RP.WebApp.Flows.AppFlows
@using EI.RP.WebApp.Flows.AppFlows.MakeAPayment.Steps
@using EI.RP.WebApp.Infrastructure.Extensions
@using EI.RP.UiFlows.Mvc.Components.PreLoad

@model EI.RP.WebApp.Flows.AppFlows.MakeAPayment.Steps.ChangePaymentAmount.ScreenModel

@functions
{
    enum PageComponent
    {
        LastPayment = 1,
        PrivacyNoticeMessage,
        PaymentMessages
    }
}

@{
    var componentPreLoader = new ComponentPreLoader<PageComponent>(Component, Model);

    componentPreLoader.StartLoading<EI.RP.WebApp.Flows.AppFlows.MakeAPayment.Components.LastPayment.Component>(PageComponent.LastPayment,
        new EI.RP.WebApp.Flows.AppFlows.MakeAPayment.Components.LastPayment.InputModel
        {
            AccountNumber = Model.AccountNumber,
            CurrentBalanceAmount = Model.CurrentBalanceAmount,
            CurrentBalanceAmountLabel = Model.CurrentBalanceAmountLabel,
            ShowPayDifferentAmount = false,
            ShowDatesTable = false
        });
    componentPreLoader.StartLoading<EI.RP.WebApp.Flows.SharedFlowComponents.Main.PrivacyNoticeMessage.Component>(PageComponent.PrivacyNoticeMessage,
        new EI.RP.WebApp.Flows.SharedFlowComponents.Main.PrivacyNoticeMessage.InputModel
        {
            AccountNumber = Model.AccountNumber,
            PrependedMessage = "Electric Ireland requires the below information to allow you make payments to your account."
        });
    componentPreLoader.StartLoading<EI.RP.WebApp.Flows.AppFlows.MakeAPayment.Components.PaymentMessages.Component>(PageComponent.PaymentMessages,
        new EI.RP.WebApp.Flows.AppFlows.MakeAPayment.Components.PaymentMessages.InputModel
        {
            AccountNumber = Model.AccountNumber
        });
}

<main class="payment" data-page="change-payment-amount">
    <div class="container">
        <div class="portal-details pay-now">
            @await componentPreLoader.Render(PageComponent.LastPayment)
            @await componentPreLoader.Render(PageComponent.PrivacyNoticeMessage)
            @await componentPreLoader.Render(PageComponent.PaymentMessages)
            @using (await Html.BeginUiFlowFormAsync(Model))
            {
                <div class="portal-details__form">
                    <h2>How much would you like to pay now?</h2>
                    <p>You can pay any amount. If you pay more than is due on your next bill, the excess will remain as credit on your account.</p>

                    <div class="form-group w-100">
                        <label for="@Html.IdFor(m => m.Amount)">Amount</label>
                        <div class="input-group w-100">
                            @Html.TextBoxFor(m => m.Amount, "{0:F}", new
                           {
                               @class = "form-control",
                               maxlength = "7",
                               placeholder = "0.00",
                               aria_label = "Amount",
                               data_testid = "change-payment-amount-amount-input",
                               inputmode = "decimal"
                           })
                        </div>
                        @Html.ValidationMessageFor(m => m.Amount, "", new { @class = "alert alert-form alert-danger", role = "alert" }, "div")
                    </div>

                    <div class="portal-details__form__buttons">
                        <flow-action data-testid="change-payment-amount-submit"
                                     class="btn btn-secondary"
                                     trigger-event=@ChangePaymentAmount.StepEvent.SaveNewPaymentAmount>Submit Amount</flow-action>
                        <flow-action data-testid="change-payment-amount-cancel"
                                     class="btn btn-xs btn-xs--no-icon btn-xs--primary"
                                     trigger-event=@ChangePaymentAmount.StepEvent.CancelChangePaymentAmount>Cancel</flow-action>
                    </div>
                </div>
            }
            </div>
    </div>
</main>
