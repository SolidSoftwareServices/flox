@using EI.RP.WebApp.Flows.AppFlows
@using EI.RP.WebApp.Flows.AppFlows.MovingHouse.Steps
@using EI.RP.WebApp.Infrastructure.Extensions
@using EI.RP.UiFlows.Mvc.Components.PreLoad

@model EI.RP.WebApp.Flows.AppFlows.MovingHouse.Steps.Step2ConfirmAddress.ScreenModel

@functions
{
    enum PageComponent
    {
        MovingHouseHeader = 1,
    }
}

@{
    var componentPreLoader = new ComponentPreLoader<PageComponent>(Component, Model);

    componentPreLoader.StartLoading<EI.RP.WebApp.Flows.AppFlows.MovingHouse.Components.MovingHouseHeader.Component>(PageComponent.MovingHouseHeader,
        new EI.RP.WebApp.Flows.AppFlows.MovingHouse.Components.MovingHouseHeader.InputModel
        {
            MovingHouseType = Model.MovingHouseType,
            StepNumber = 2
        });
}

<main class="plan" data-page="mimo-2-confirm">
    <div class="container">
        <div class="portal-details">
            @await componentPreLoader.Render(PageComponent.MovingHouseHeader)
            <h2 id="headerConfirm" class="landing-head">Confirm your new address</h2>
            <span id="addressTitle" class="form-info form-info-header">
                @if (!string.IsNullOrEmpty(Model.NewGPRN) && string.IsNullOrEmpty(Model.NewMPRN))
                {
                    @:The following address matches the GPRN you entered:
                }
                else if (string.IsNullOrEmpty(Model.NewGPRN) && !string.IsNullOrEmpty(Model.NewMPRN))
                {
                    @:The following address matches the MPRN you entered:
                }
                else
                {
                    @:The following address matches the MPRN/GPRN you entered:
                }
            </span>

            <div class="border rounded p-5 my-5">
                <div class="row">
                    @foreach (var item in Model.PremiseAddressInfos)
                    {
                        <div class="col-12 col-sm-6 mt-4 mb-4" data-testid="address-container">
                            <p class="m-0" data-testid="address-container-title-and-number"><strong>@item.PremiseName: @item.PRN</strong></p>
                            <p class="m-0 mt-2 text-uppercase" data-testid="address-container-address">
                                @if (item.HouseNo != string.Empty || item.Street != string.Empty)
                                {
                                    @($"{item.HouseNo} {item.Street}")<br />
                                }
                                @if (item.City != string.Empty)
                                {
                                    @item.City
                                }
                            </p>
                        </div>
                    }
                </div>
            </div>

            <div class="center-on-mobile">
                @using (await Html.BeginUiFlowFormAsync(Model))
                {
                    <flow-action class="btn btn-primary" id="btnContinue"
                                 trigger-event="@Step2ConfirmAddress.StepEvent.ToStep3">Continue</flow-action>
                }
                @using (await Html.BeginUiFlowFormAsync(Model))
                {
                    <div class="mt-5">
                        <flow-action class="btn btn-xs btn-xs-back green" id="new_mprn_gprn"
                                     trigger-event="@Step2ConfirmAddress.StepEvent.Reload">Re-enter my details</flow-action>
                    </div>
                }
            </div>

            <p class="form-info my-5 form-info-footer" data-testid="mimo-2-help-message">Need help? Contact us on 1850 372 372 to complete your move.</p>

        </div>
    </div>
</main>
