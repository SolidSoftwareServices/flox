@using Ei.Rp.DomainModels.MappingValues
@using Ei.Rp.DomainModels.SmartActivation
@using Ei.Rp.Mvc.Core.Views
@using EI.RP.UiFlows.Mvc.Views
@using EI.RP.WebApp.Infrastructure.Extensions
@using EI.RP.WebApp.Flows.AppFlows.SmartActivation.Steps

@model EI.RP.WebApp.Flows.AppFlows.SmartActivation.Components.SmartActivationPlanCard.ViewModel

@functions{
    string PriceText(SmartPlanPriceType src)
    {
        if (src == SmartPlanPriceType.Electricity24H)
        {
            return "Electricity unit price";
        }
        if (src == SmartPlanPriceType.Gas24H)
        {
            return "Gas unit price";
        }
        if (src == SmartPlanPriceType.ElectricityBoost)
        {
            return "Night Boost: 02:00 - 04:00";
        }
        if (src == SmartPlanPriceType.ElectricityDay)
        {
            return "Day: 08.00 - 23.00";
        }
        if (src == SmartPlanPriceType.ElectricityNight)
        {
            return "Night: 23.00 - 08.00";
        }
        if (src == SmartPlanPriceType.ElectricityPeak)
        {
            return "Peak: 17:00 - 19:00";
        }
        throw new NotSupportedException(src);
    }

    private string GetUnitPriceDescription(string description)
    {
        if (string.IsNullOrWhiteSpace(description))
        {
            return "unit price";
        }
        if (description.Equals("Free Weekend Day", StringComparison.OrdinalIgnoreCase))
        {
            return "Free Saturday or Sunday unit price";
        }
        return $"{description} unit price";
    }

    private string GetPriceValue(PlanPrice price)
    {
        var format = "N";
        if (price.Type == SmartPlanPriceType.Gas24H)
        {
            format = "N3";
        }
        return $"{price.Value.ToStringCents(format)} per kWh";
    }

}

@{
    var modelFeatures = Model.Features.ToArray();
}

<div class="col-lg-4 mt-lg-5">
    <div class="plan-card p-5 mb-xs-0">
        <div class="top">
            <h2 id="plan-name" class="@(Model.PlanName.Length <= 14 ? "double-line-height" : "")">@Model.PlanName.ToHtmlText(Html)</h2>
            <hr class="my-4" aria-hidden="true">
            <ul class="checklist">
                @foreach (var modelFeature in modelFeatures.Where(x => x.Highlighted))
                {
                    <li>
                        <strong>@modelFeature.Text.ToHtmlText(Html)</strong>
                    </li>
                }
                @foreach (var modelFeature in modelFeatures.Where(x => !x.Highlighted))
                {
                    <li>@modelFeature.Text.ToHtmlText(Html)</li>
                }
            </ul>
        </div>
        <div class="badge">
            @Model.BonusText.ToHtmlText(Html)
        </div>
        <div class="bottom">
            <div class="w-100 prices mt-3">
                @if (!Model.Prices.Any(p => p.Type == SmartPlanPriceType.Electricity24H))
                {
                    <div class="row mb-3">
                        <div class="col text-left">
                            <strong>@PriceText(SmartPlanPriceType.Electricity24H)</strong>
                        </div>
                        <div class="col-auto text-right"></div>
                    </div>
                    @foreach (var price in Model.Prices)
                     {
                         <div class="row mb-3">
                             <div class="col text-left">
                                 @if (price.Type == SmartPlanPriceType.Gas24H)
                                 {
                                     <strong>@PriceText(price.Type)</strong>
                                 }
                                 else
                                 {
                                     @:@PriceText(price.Type)
                                 }
                             </div>
                             <div class="col-auto text-right">@GetPriceValue(price)</div>
                         </div>
                     }
                }
                else
                {
                    @foreach (var price in Model.Prices)
                     {
                         <div class="row mb-3">
                             <div class="col text-left">
                                 <strong>@PriceText(price.Type)</strong>
                             </div>
                             <div class="col-auto text-right">@GetPriceValue(price)</div>
                         </div>
                     }
                }
                
                @if (Model.FirstYearCostPerKWh != null)
                {
                    <div class="row mb-3">
                        <div class="col text-left">
                            <strong>First year cost</strong>
                        </div>
                        <div class="col-auto text-right">@(Model.FirstYearCostPerKWh) per kWh</div>
                    </div>
                }
                @if (Model.EstimatedAnnualBill != null)
                {
                    <div class="row align-items-baseline">
                        <div class="col text-left">
                            <strong>Estimated annual bill</strong>
                        </div>
                        <div class="col-auto text-right eur">@(Model.EstimatedAnnualBill.ToString("G29"))</div>
                    </div>
                }
            </div>
            @if (!string.IsNullOrEmpty(Model.EABDescription))
            {
                <p class="note mt-4">
                    @Model.EABDescription
                </p>
            }
            <div class="bottom-cta mt-4">
                @if (Model.FullPricingInformation != null)
                {
                    <div>
                        <a href="#" class="btn btn-xs btn-xs--no-icon justify-content-center plan" data-testid="full-pricing-link" data-toggle="modal" data-target="#pricing-modal-@Model.ID">Full pricing information</a>
                    </div>
                }
                <div class="mt-5">
                    @if (Model.FreeDayOfElectricityChoice.Any())
                    {
                        <a href="#" class="btn btn-primary col-md-10 centre offset-md-1" type="button" data-toggle="modal" data-target="#free-day-plan-modal">Choose This Plan</a>
                    }
                    else
                    {
                        @using (await Html.BeginUiFlowFormAsync(Model.ContainerModel))
                        {
                            @(await Html.GetHiddenFlowStepMemberAsync<Step2SelectPlan.ScreenModel>(x => x.SelectedPlanName, $"{Model.PlanName}", false))
                            <flow-action id="selectPlanBtn" class="btn btn-primary col-md-10 centre offset-md-1" trigger-event="@(Step2SelectPlan.StepEvent.PlanSelected)">Choose This Plan</flow-action>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    @if (Model.FreeDayOfElectricityChoice.Any())
    {
        <div class="modal modal-lg fade" id="free-day-plan-modal" tabindex="-1" role="dialog" aria-labelledby="free-day-plan-modal-label" aria-hidden="true" data-trap-focus>
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <div class="my-3 m-lg-5 p-5">
                        <div class="row">
                            <div class="offset-md-1 col-md-10">
                                <h1 class="text-primary page-title text-left mb-5" id="free-day-plan-modal-label">What day would you like free electricity?</h1>
                                <hr class="my-5" aria-hidden="true" />
                                <p class="mb-5">@Model.FreeDayOfElectricityDescription</p>
                                @using (await Html.BeginUiFlowFormAsync(Model.ContainerModel))
                                {
                                    @(await Html.GetHiddenFlowStepMemberAsync<Step2SelectPlan.ScreenModel>(x => x.SelectedPlanName, $"{Model.PlanName}", false))
                                    <div class="form-group-wrapper form-group-wrapper--with-border">
                                        @foreach (var dayOfWeek in Model.FreeDayOfElectricityChoice)
                                        {
                                            <div class="form-group form-check form-check--border form-radio">
                                                <div class="custom-control custom-radio">
                                                    <input type="radio" id="customRadio@(dayOfWeek)" name="SelectedFreeDay" class="custom-control-input" value="@(dayOfWeek)" @(dayOfWeek == Model.FreeDayOfElectricityChoice.First() ? "checked" : string.Empty)>
                                                    <label class="custom-control-label" for="customRadio@(dayOfWeek)">@(dayOfWeek.ToString())</label>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                    <div class="btn-container btn-container--center text-center">
                                        <flow-action id="selectPlanBtn" class="btn btn-primary" trigger-event="@(Step2SelectPlan.StepEvent.PlanSelected)">Continue</flow-action>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    @if (Model.FullPricingInformation != null)
    {
        <div class="modal modal-lg fade pricing-modal" id="pricing-modal-@Model.ID" tabindex="-1" role="dialog" aria-labelledby="pricing-modal-label-@Model.ID" aria-hidden="true" data-trap-focus>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="p-5">
                        <div class="row">
                            <div class="offset-md-1 col-md-10 full-pricing">
                                <h2 id="pricing-modal-label-@Model.ID">@Model.PlanName.ToHtmlText(Html)</h2>
                                <hr class="mb-5" aria-hidden="true">
                                <h3>Full Pricing Information</h3>
                                @if (Model.FullPricingInformation.ElectricityPricingInfo.UnitPrices.Any())
                                {
                                    <table class="table table__pricing" data-testid="electricity-prices">
                                        <thead class="table__pricing__header">
                                            <tr>
                                                <th width="70%"><strong class="electricity-pricing">Electricity prices per unit (cent per kWh)</strong></th>
                                                <th width="15%">ex. VAT</th>
                                                <th width="15%">inc. VAT</th>
                                            </tr>
                                        </thead>
                                        <tbody class="table__pricing__body">
                                            @foreach (var unitPrice in Model.FullPricingInformation.ElectricityPricingInfo.UnitPrices)
                                            {
                                                <tr>
                                                    <td><strong>Unit price @unitPrice.Description</strong></td>
                                                    <td></td>
                                                    <td></td>
                                                </tr>
                                                <tr>
                                                    <td>
                                                        Standard @GetUnitPriceDescription(unitPrice.Description)
                                                        @if (!string.IsNullOrWhiteSpace(Model.FullPricingInformation.LowCostPricingMessage) &&
                                                          (unitPrice.Description.Equals("Free Weekend Day", StringComparison.OrdinalIgnoreCase) ||
                                                           unitPrice.Description.Equals("Night Boost", StringComparison.OrdinalIgnoreCase)))
                                                        {
                                                            <sup>3</sup>
                                                        }
                                                    </td>
                                                    <td>@unitPrice.StandardPrice.ExcludingVat.ToStringCents()/kWh</td>
                                                    <td>@unitPrice.StandardPrice.IncludingVat.ToStringCents()/kWh</td>
                                                </tr>
                                                <tr class="row-border">
                                                    <td>Effective @GetUnitPriceDescription(unitPrice.Description) with @unitPrice.EffectiveDirectDebitDiscountPercentage% direct debit and online billing discount <sup>1</sup></td>
                                                    <td>@unitPrice.EffectivePrice.ExcludingVat.ToStringCents()/kWh</td>
                                                    <td>@unitPrice.EffectivePrice.IncludingVat.ToStringCents()/kWh</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                }
                                @if (Model.FullPricingInformation.ElectricityPricingInfo.StandingCharges.Any())
                                {
                                    <table class="table table__pricing" data-testid="electricity-charges">
                                        <thead class="table__pricing__header">
                                            <tr>
                                                <th width="70%"><strong class="electricity-pricing">Electricity standing charges per year</strong></th>
                                                <th width="15%">ex. VAT</th>
                                                <th width="15%">inc. VAT</th>
                                            </tr>
                                        </thead>
                                        <tbody class="table__pricing__body">
                                            @foreach (var charge in Model.FullPricingInformation.ElectricityPricingInfo.StandingCharges)
                                            {
                                                <tr>
                                                    <td><strong>@charge.ChargeDescription standing charge</strong></td>
                                                    <td></td>
                                                    <td></td>
                                                </tr>
                                                <tr>
                                                    <td>Standing charge 24 hour @charge.ChargeDescription.ToLower() per year</td>
                                                    <td>@charge.StandingCharge24H.ExcludingVat.ToString()</td>
                                                    <td>@charge.StandingCharge24H.IncludingVat.ToString()</td>
                                                </tr>
                                                <tr>
                                                    <td>Low usage standing charge @charge.ChargeDescription.ToLower() per year <sup>2</sup></td>
                                                    <td>@charge.LowUsageStandingCharge.ExcludingVat.ToString()</td>
                                                    <td>@charge.LowUsageStandingCharge.IncludingVat.ToString()</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                }
                                @if (Model.FullPricingInformation.ElectricityPricingInfo?.ElectricityPublicServiceObligationLevy != null)
                                {
                                    <table class="table table__pricing" data-testid="electricity-pso">
                                        <thead class="table__pricing__header">
                                            <tr>
                                                <th width="70%"><strong class="electricity-pricing">Electricity PSO levy per year</strong></th>
                                                <th width="15%">ex. VAT</th>
                                                <th width="15%">inc. VAT</th>
                                            </tr>
                                        </thead>
                                        <tbody class="table__pricing__body">
                                            <tr>
                                                <td>Public Service Obligation levy per year</td>
                                                <td>@Model.FullPricingInformation.ElectricityPricingInfo.ElectricityPublicServiceObligationLevy.ExcludingVat.ToString()</td>
                                                <td>@Model.FullPricingInformation.ElectricityPricingInfo.ElectricityPublicServiceObligationLevy.IncludingVat.ToString()</td>
                                            </tr>
                                        </tbody>
                                    </table>
                                }
                                @if (Model.FullPricingInformation.GasPricingInfo != null)
                                {
                                    <br />
                                    <div class="row justify-content-center">Gas Prices & Charges</div>
                                    @if(Model.FullPricingInformation.GasPricingInfo.UnitPrices.Any())
                                    { 
                                        <table class="table table__pricing" data-testid="gas-prices">
                                            <thead class="table__pricing__header">
                                            <tr>
                                                <th width="70%"><strong class="gas-pricing">Gas price per unit (cent per kWh)</strong></th>
                                                <th width="15%">ex. VAT</th>
                                                <th width="15%">inc. VAT</th>
                                            </tr>
                                            </thead>
                                            <tbody class="table__pricing__body">
                                            @foreach (var gasUnitPrice in Model.FullPricingInformation.GasPricingInfo.UnitPrices)
                                            {
                                                <tr>
                                                    <td>Standard gas @gasUnitPrice.Description unit price per kWh</td>
                                                    <td>@gasUnitPrice.StandardPrice.ExcludingVat.ToStringCents("N3")/kWh</td>
                                                    <td>@gasUnitPrice.StandardPrice.IncludingVat.ToStringCents("N3")/kWh</td>
                                                </tr>
                                                <tr>
                                                    <td>Effective gas unit price per kWh with @gasUnitPrice.EffectiveDirectDebitDiscountPercentage% dual fuel, direct debit and online billing discount <sup>1</sup></td>
                                                    <td>@gasUnitPrice.EffectivePrice.ExcludingVat.ToStringCents("N3")/kWh</td>
                                                    <td>@gasUnitPrice.EffectivePrice.IncludingVat.ToStringCents("N3")/kWh</td>
                                                </tr>
                                            }
                                            </tbody>
                                        </table>
                                    }
                                    @if (Model.FullPricingInformation.GasPricingInfo.CarbonTax != null)
                                    {
                                        <table class="table table__pricing" data-testid="gas-carbon-tax">
                                            <thead class="table__pricing__header">
                                                <tr>
                                                    <th width="70%"><strong class="gas-pricing">Gas carbon tax per unit (cent per kWh)</strong></th>
                                                    <th width="15%">ex. VAT</th>
                                                    <th width="15%">inc. VAT</th>
                                                </tr>
                                            </thead>
                                            <tbody class="table__pricing__body">
                                                <tr>
                                                    <td>Carbon tax per kWh</td>
                                                    <td>@Model.FullPricingInformation.GasPricingInfo.CarbonTax.ExcludingVat.ToStringCents("N3")/kWh</td>
                                                    <td>@Model.FullPricingInformation.GasPricingInfo.CarbonTax.IncludingVat.ToStringCents("N3")/kWh</td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    }
                                    @if (Model.FullPricingInformation.GasPricingInfo.StandingCharge != null)
                                    {
                                        <table class="table table__pricing" data-testid="gas-charges">
                                            <thead class="table__pricing__header">
                                                <tr>
                                                    <th width="70%"><strong class="gas-pricing">Gas standing charge per year</strong></th>
                                                    <th width="15%">ex. VAT</th>
                                                    <th width="15%">inc. VAT</th>
                                                </tr>
                                            </thead>
                                            <tbody class="table__pricing__body">
                                                <tr>
                                                    <td>Standing charge per year</td>
                                                    <td>@Model.FullPricingInformation.GasPricingInfo.StandingCharge.ExcludingVat</td>
                                                    <td>@Model.FullPricingInformation.GasPricingInfo.StandingCharge.IncludingVat</td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    }
                                }
                                @if (!string.IsNullOrWhiteSpace(Model.FullPricingInformation.EstimatedAnnualBillType))
                                {
                                    <br />
                                    <div class="row justify-content-center">
                                        Estimated annual bill (EAB) for @Model.FullPricingInformation.EstimatedAnnualBillType
                                        <sup style="font-size: 1.1rem;">
                                            @if (string.IsNullOrWhiteSpace(Model.FullPricingInformation.LowCostPricingMessage))
                                            {
                                                @:3
                                            }
                                            else
                                            {
                                                @:4
                                            }
                                        </sup>
                                    </div>
                                    <table class="table table__pricing mb-5">
                                        <thead class="table__pricing__header">
                                            <tr>
                                                <th width="70%"></th>
                                                <th width="15%">ex. VAT</th>
                                                <th width="15%">inc. VAT</th>
                                            </tr>
                                        </thead>
                                        <tbody class="table__pricing__body">
                                            @if (Model.FullPricingInformation.EstimatedAnnualBillForGas != null)
                                            {
                                                <tr>
                                                    <td>Estimated Annual Bill for Gas (EAB)</td>
                                                    <td>@Model.FullPricingInformation.EstimatedAnnualBillForGas.ExcludingVat.ToString("G29")</td>
                                                    <td>@Model.FullPricingInformation.EstimatedAnnualBillForGas.IncludingVat.ToString("G29")</td>
                                                </tr>
                                            }
                                            else
                                            {
                                                <tr>
                                                    <td>Urban 24-hour meter</td>
                                                    <td>@Model.FullPricingInformation.EstimatedUrbanAnnualBill.ExcludingVat.ToString("G29")</td>
                                                    <td>@Model.FullPricingInformation.EstimatedUrbanAnnualBill.IncludingVat.ToString("G29")</td>
                                                </tr>
                                                <tr>
                                                    <td>Rural 24-hour meter</td>
                                                    <td>@Model.FullPricingInformation.EstimatedRuralAnnualBill.ExcludingVat.ToString("G29")</td>
                                                    <td>@Model.FullPricingInformation.EstimatedRuralAnnualBill.IncludingVat.ToString("G29")</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                }
                                @if (!string.IsNullOrWhiteSpace(Model.FullPricingInformation.PricesValidityMessage))
                                {
                                    <p data-testid="price-validity-message">
                                        @Model.FullPricingInformation.PricesValidityMessage
                                    </p>
                                }
                                <p>
                                    If you are selecting a smart price plan for the first time, your meter will be reconfigured so that your supplier will receive a minimum of three meter reads (day/night/peak). This change cannot be reversed. The frequency of these reads will depend on the smart price plan that you have selected and/or any consent you may have given.
                                    If the signal from your meter is not sufficient to support the transfer of half-hourly data, we will contact you to discuss other suitable products.
                                    @if (Model.PlanType == SmartPlanGroup.Dual)
                                    {
                                        @: In line with the National mart Meter Rollout plan, smart gas meters will only be integrated in Phase 3.Until that point, Smart Services will only be available to electricity customers who have had a smart meter installed and signed up to a smart price plan.Dual Fuel customers will still be subject to existing gas terms and conditions until their meter has been upgraded.
                                    }
                                    If you are selecting a smart price plan for the first time, the full range of Smart Services may not be available until up to 12 months after the date at which full half hourly consent was given.
                                </p>
                                <ol class="mt-5">
                                    <li>We quote the unit rate inclusive of your discounts for information purposes only, however, the unit rate displayed on your bill will be the unit rate before discounts. You will see your discount total as one line item at the end of your bill.</li>
                                    <li>This alternative standing charge only applies if your average daily usage is less than 2 units per billing period.</li>
                                    @if (!string.IsNullOrWhiteSpace(Model.FullPricingInformation.LowCostPricingMessage))
                                    {
                                        <li data-testid="low-cost-message" style="white-space: pre-line">@Model.FullPricingInformation.LowCostPricingMessage</li>
                                    }
                                    @if (!string.IsNullOrWhiteSpace(Model.FullPricingInformation.EstimatedAnnualBillMessage))
                                    {
                                        <li data-testid="eab-message" style="white-space: pre-line">@Model.FullPricingInformation.EstimatedAnnualBillMessage</li>
                                    }
                                </ol>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    }
</div>
