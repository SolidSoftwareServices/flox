@using Ei.Rp.DomainModels.MappingValues
@using EI.RP.WebApp.DomainModelExtensions
@using EI.RP.WebApp.Infrastructure.Extensions

@model EI.RP.WebApp.Flows.SharedFlowComponents.Main.MeterReadingHistory.ViewModel

@if (Model.Paging.CurrentPageItems?.Any() == true)
{
    <h2 id="meter-reading-history-title" data-testid="meter-reading-history-title">Meter Reading History</h2>
    <hr aria-hidden="true" />

    <table class="table table-striped table-borderless table-desktop" data-testid="meter-reading-history-table" id="@Model.TableId">
        <thead>
            <tr>
                <th scope="col">Meter Number</th>
                <th scope="col">Meter Type</th>
                <th scope="col">From date</th>
                <th scope="col">To date</th>
                <th scope="col">Reading</th>
                <th scope="col">Type <button type="button" class="portal-details__form__info__icon__meter-reading cursor-pointer border-0" aria-label="Type" data-toggle="modal" data-target="#reading-type-modal"></button></th>
                <th scope="col">Consumption</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Paging.CurrentPageItems)
            {
                var unit = item.MeasurementUnitForConsumption.Equals(MeterUnit.KWH, StringComparison.InvariantCultureIgnoreCase)
                    ? MeterUnit.KWH.ToDisplayFormat()
                    : item.MeasurementUnitForConsumption;

                <tr>
                    <td>@item.MaskedSerialNumber</td>
                    <td>@item.MeterType</td>
                    <td>@item.FromDate?.ToString("dnn MMM yyyy", useExtendedSpecifiers: true)</td>
                    <td>@item.ToDate?.ToString("dnn MMM yyyy", useExtendedSpecifiers: true)</td>
                    <td data-testid="meter-reading-history-table-reading">@item.Reading</td>
                    <td>@item.MeterReadingType</td>
                    <td>@(item.IsPendingReadingVerification ? "Pending" : $"{item.Consumption} {unit}")</td>
                </tr>
            }
        </tbody>
    </table>

    <table class="table table-striped table-borderless table-mobile" data-testid="meter-reading-history-table-mobile" id="@Model.TableId">
        @foreach (var item in Model.Paging.CurrentPageItems)
        {
            var unit = item.MeasurementUnitForConsumption.Equals(MeterUnit.KWH, StringComparison.InvariantCultureIgnoreCase)
                ? MeterUnit.KWH.ToDisplayFormat()
                : item.MeasurementUnitForConsumption;

            <tr>
                <td>
                    <p class="blue">@item.FromDate?.ToString("dnn MMM yyyy", useExtendedSpecifiers: true) - @item.ToDate?.ToString("dnn MMM yyyy", useExtendedSpecifiers: true)</p>
                    <div class="row">
                        <div class="col-8">
                            <span>Meter Number</span>
                            <p>@item.MaskedSerialNumber</p>
                        </div>
                        <div class="col-4">
                            <span>Meter Type</span>
                            <p>@item.MeterType</p>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-4">
                            <span>Reading</span>
                            <p data-testid="meter-reading-history-table-mobile-reading">@item.Reading</p>
                        </div>
                        <div class="col-4">
                            <span>Type <button type="button" class="portal-details__form__info__icon__meter-reading cursor-pointer border-0" aria-label="Type" data-toggle="modal" data-target="#reading-type-modal"></button></span>
                            <p>@item.MeterReadingType</p>
                        </div>
                        <div class="col-4">
                            <span>Consumption</span>
                            <p class="blue">@(item.IsPendingReadingVerification ? "Pending" : $"{item.Consumption} {unit}")</p>
                        </div>
                    </div>
                </td>
            </tr>
        }
    </table>
}