@using EI.RP.WebApp.Flows.AppFlows
@using EI.RP.UiFlows.Mvc.Components.PreLoad

@model EI.RP.WebApp.Flows.SharedFlowComponents.Main.SubNavigation.ViewModel

@functions 
{
    private bool IsActive(IEnumerable<ResidentialPortalFlowType> relatedFlowTypes)
    {
        return Model.CurrentFlowType.HasValue && relatedFlowTypes.Any(x => x == Model.CurrentFlowType);
    }
}

@{
    var componentPreLoader = new ComponentPreLoader<string>(Component, Model.ScreenModel);

    for (var i=0;i<Model.NavigationItems.Count();i++)
    {
	    var item = Model.NavigationItems.ElementAt(i);
        if (item.AnchorLink != null)
        {
            componentPreLoader.StartLoading<EI.RP.WebApp.Flows.SharedFlowComponents.Main.AnchorLink.Component>($"sub-navigation-{i}",
                new EI.RP.WebApp.Flows.SharedFlowComponents.Main.AnchorLink.InputModel
                {
                    AnchorLinkItem = item.AnchorLink
                });
        }
    }
}

<nav class="portal-header__nav" aria-label="Account menu" data-resolve-active>
    <div class="container">
        <ul class="portal-header__nav__current">
            <li class="portal-header__nav__item"><a href="#">Menu</a></li>
        </ul>
        <ul>
            @for (var i=0;i<Model.NavigationItems.Count();i++)
            {
	            var item = Model.NavigationItems.ElementAt(i);
                <li class="portal-header__nav__item @item.GetClassListString() @(IsActive(item.RelatedFlowTypes) ? "active" : string.Empty)" 
                    @Html.Raw(string.IsNullOrWhiteSpace(item.Role) ? string.Empty : $"role=\"{item.Role}\"")
                    @Html.Raw(IsActive(item.RelatedFlowTypes) ? "aria-current=\"page\"" : string.Empty)>
                    @if (item.AnchorLink != null)
                    {
                        @await componentPreLoader.Render($"sub-navigation-{i}")
                    }
                </li>
            }
        </ul>
    </div>
</nav>
