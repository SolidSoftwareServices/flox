@using Ei.Rp.Mvc.Core.Cryptography.AntiTampering

@model EI.RP.WebApp.Models.Membership.PasswordModel

@{
    ViewData["Title"] = "Create Password";
}

<div data-page="create-account-create-password">
    <h1 class="page-login__title" id="page-login__title">Create Password</h1>
    <p class="page-login__subtitle mb-5">You will use this Password to log in to your account.</p>
    @using (Html.BeginForm("SaveNewPassword", "UserRegistration", FormMethod.Post, new { @class = "form-password-wrapper", id = "createPassword" }))
    {
        @await Html.HoneypotForAsync(m => m.PotText)
        @await Html.SecureHiddenForAsync(m => m.RequestId, false)
        @await Html.SecureHiddenForAsync(m => m.ActivationKey, false)
        @await Html.SecureHiddenForAsync(model => model.Email, false)
        <div class="form-group w-100 mb-5">
            <div class="form-password">
                <label for="password">Password</label>
                <div class="position-relative">
                    @Html.TextBoxFor(model => model.PasswordFormData.Password, new
                    {
                        @class = "w-100 form-control",
                        id = "password",
                        type = "Password",
                        placeholder = "********",
                        maxlength = "40",
                        autocomplete = "new-password"
                    })
                    <button type="button" class="toggle-password-visibility" aria-label="Show Password">show</button>
                </div>
                @Html.ValidationMessageFor(model => model.PasswordFormData.Password, "", new { @class = "alert alert-form alert-danger w-100", @data_testid="password-error" })
            </div>
            <ul class="password-criteria pl-0 mb-5">
                <li id="8char">Use 8 or more characters</li>
                <li id="lcase">Mix of lower case &amp; upper case</li>
                <li id="num">Numbers</li>
            </ul>
            <div class="form-password">
                <label for="txtConfirmPassword">Confirm your password</label>
                <div class="position-relative">
                    @Html.TextBoxFor(model => model.PasswordFormData.ConfirmPassword, new
                    {
                        @class = "w-100 form-control",
                        id = "txtConfirmPassword",
                        type = "Password",
                        placeholder = "********",
                        maxlength = "40",
                        autocomplete = "new-password"
                    })
                    <button type="button" class="toggle-password-visibility" aria-label="Show Password">show</button>
                </div>
                @Html.ValidationMessageFor(model => model.PasswordFormData.ConfirmPassword, "", new { @class = "alert alert-form alert-danger w-100", @data_testid="confirm-password-error" })
            </div>
        </div>
        <div class="form-group w-100 mb-5">
            <fieldset>
                <legend>
                    <label>Date of Birth <button type="button" class="portal-details__form__info__icon border-0" aria-label="Information about Date of Birth" data-toggle="tooltip" data-placement="right" title="" data-original-title="This information will help us to protect your data"></button></label>
                </legend>
                <div class="date-wrapper">
                    @Html.TextBoxFor(model => model.PasswordFormData.DateofBirthDay, new
                    {
                        @class = "form-control",
                        id = "txtDateofBirthDay",
                        type = "text",
                        placeholder = "DD",
                        maxlength = "2",
                        aria_label = "Day",
                        autocomplete = "bday-day"
                    })
                    @Html.TextBoxFor(model => model.PasswordFormData.DateofBirthMonth, new
                    {
                        @class = "form-control",
                        id = "txtDateofBirthMonth",
                        type = "text",
                        placeholder = "MM",
                        maxlength = "2",
                        aria_label = "Month",
                        autocomplete = "bday-month"
                    })
                    @Html.TextBoxFor(model => model.PasswordFormData.DateofBirthYear, new
                    {
                        @class = "form-control",
                        id = "txtDateofBirthYear",
                        type = "text",
                        placeholder = "YYYY",
                        maxlength = "4",
                        aria_label = "Year",
                        autocomplete = "bday-year"
                    })
                </div>
                @Html.ValidationMessageFor(model => model.PasswordFormData.DateOfBirth, "", new { @class = "alert alert-form alert-danger w-100",@data_testid="date-of-birth-error" })
            </fieldset>
        </div>
        @Html.ValidationSummary(true, "", new
        {
            @class = "alert alert-form alert-danger w-100 mt-5 mb-5",
            role = "alert"
        })
        <div class="row">
            <div class="col-12 col-lg-10">
                <button id="btnContinue" type="submit" class="btn btn-primary btn-lg btn-lg-create-account">Continue</button>
            </div>
        </div>
    }
</div>

@section images
{
    <div class="page-login__img" style="background-image: url('@Url.Content("~/img/password-bg.jpg")')"></div>
}
