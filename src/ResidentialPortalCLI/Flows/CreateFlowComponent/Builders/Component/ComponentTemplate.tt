<#@ template language="C#" #>
<#@ import namespace="EI.RP.CoreServices.System" #>

using System.Threading.Tasks;
using EI.RP.UiFlows.Core.Flows.Screens.Models;
using EI.RP.UiFlows.Mvc.Components;
using Microsoft.AspNetCore.Mvc;

namespace <#=this.Options.Namespace()#>
{

    /// <summary>
	/// This class defines the the component <#=this.Options.ComponentName#>
	/// </summary>
    /// <example>
    /// This sample shows how to include the component
    ///<code>
    ///<![CDATA[ <vc:<#=this.Options.ComponentName.ToKebabCase()#> screen-model = "@Model" input =  @( new  InputModel {SampleInputValue="This is a sample value" } )/>]] >
    /// </code>
    /// </example>
	[ViewComponent(Name = Name)]
	public class Component : FlowStepComponent<InputModel, ViewModel>
	{
		private readonly IComponentViewModelBuilder<InputModel, ViewModel> _builder;
		public const string Name = "<#=this.Options.ComponentName#>";


		public Component(IComponentViewModelBuilder<InputModel, ViewModel> builder) : base(Name)
		{
			_builder = builder;
		}

		protected override async Task<ViewModel> ResolveComponentDataAsync(InputModel input, UiFlowScreenModel screenModel)
		{
			return await _builder.Resolve(input, screenModel);
		}
	}
}
