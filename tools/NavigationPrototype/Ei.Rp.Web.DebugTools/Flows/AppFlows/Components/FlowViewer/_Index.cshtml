@model Ei.Rp.Web.DebugTools.Flows.AppFlows.Components.FlowViewer.FlowViewerComponent.Model

@{
	var path = System.IO.Path.GetDirectoryName(Path).Replace('\\', '/');
}

<div id="flow_debugger">
	@if (Model.Error != null)
	{
		<h2>There was an error loading the model:</h2><br/>
		<b>@(Model.Error)</b>
	}
	else
	{
		if (string.IsNullOrWhiteSpace(Model.GraphAsJson))
		{
			<h2>There is no current flow to debug</h2><br/>
		}
		else
		{
			 <link rel="stylesheet" href="@(path)/flow-debugger-styles.css"/>
			 <link href="./../../../../scripts/jsonpath/jsonpath-picker.min.css" rel="stylesheet"/>
			 <script src="./../../../../scripts/jsonpath/jsonpath-picker.min.js"></script>


			 <script src="https://cdnjs.cloudflare.com/ajax/libs/require.js/2.2.0/require.min.js" data-main="@(path)/boot"></script>
			 @Html.HiddenFor(x => x.GraphAsJson, new {id = "flow_debugger_graph"})
			 <div id="graphContainer">
				 <div id="graphView"></div>
			 </div>
			 <div id="stepsData">
			 	<br />
				<b> @Model.Count</b>
			 <br />
			 <b>Step data values</b>
			 <br />
			 <pre id="json-renderer" class="json-tree"></pre>
			 <input class="path" type="text">

			 @Html.HiddenFor(x => x.StepsDatasAsJson, new { id = "flow_steps_data" })
			 </div>
		 }
	}
</div>